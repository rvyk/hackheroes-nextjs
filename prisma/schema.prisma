generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  externalId String? @unique
  email      String
  isAdmin    Boolean @default(false)

  adminOrganization   Organization? @relation("AdminOrganization")
  adminOrganizationId String?

  participantOrganizations Participant[]

  challengeId          String?
  currentChallenge     Challenge?         @relation(fields: [challengeId], references: [id])
  currentChallengeDate DateTime?
  challengeHistory     ChallengeHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([email])
}

model Organization {
  id          String @id @default(cuid())
  name        String
  description String

  admin   User   @relation("AdminOrganization", fields: [adminId], references: [id])
  adminId String @unique

  Reward      Reward[]
  Participant Participant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Reward {
  id          String @id @default(cuid())
  description String
  points      Int

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}

model Participant {
  id     String @id @default(cuid())
  points Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@index([id])
}

model ChallengeCategory {
  id   String @id
  name String

  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  Challenge Challenge[]
}

model Challenge {
  id                  String            @id @default(cuid())
  title               String
  description         String
  points              Int
  challengeCategoryId String
  category            ChallengeCategory @relation(fields: [challengeCategoryId], references: [id])

  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
  User             User[]
  ChallengeHistory ChallengeHistory[]
}

model ChallengeHistory {
  id          String   @id @default(cuid())
  userId      String
  challengeId String
  completedAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  User      User       @relation(fields: [userId], references: [id])
  Challenge Challenge? @relation(fields: [challengeId], references: [id])

  @@index([userId])
  @@index([challengeId])
}
